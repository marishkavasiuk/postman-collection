{
	"info": {
		"_postman_id": "3e0662fb-f9fe-477b-8a45-2af11e521f62",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create board",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e30fa484-64c9-49f9-9778-eb85e962798b",
						"exec": [
							"let boardNumber = pm.environment.get(\"boardNumber\");\r",
							" \r",
							"if (boardNumber) {\r",
							"    boardNumber++; \r",
							"} else {\r",
							"    boardNumber = 1; \r",
							"}\r",
							"\r",
							"pm.environment.set(\"boardNumber\", boardNumber);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a786c4be-9b7c-4848-ac86-9f75cd564720",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"const response = pm.response.json();",
							"   ",
							"pm.test(\"Board should be created\", function () {",
							"    pm.expect(response.name).to.eql(\"My board \" + (pm.environment.get(\"boardNumber\")));",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function () {",
							"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							"",
							"pm.environment.set(\"boardID\", response.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=My board {{boardNumber}}&key={{trelloKey}}&token={{trelloToken}}&defaultLabels=false&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "My board {{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLabels",
							"value": "false"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef2859aa-fd1c-4b82-ad64-44454408f961",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"The name of the list is TODO\", function () {",
							"    pm.expect(response.name).to.eql(\"TODO\");",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Should be created inside the board\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardID\"));",
							"});",
							"",
							"pm.environment.set(\"todoListId\", response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{trelloKey}}&token={{trelloToken}}&name=TODO&idBoard={{boardID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc0edf4e-23e3-4e0a-8606-c58415916c8a",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"The name of the list is DONE\", function () {",
							"    pm.expect(response.name).to.eql(\"DONE\");",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Should be created inside the board\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardID\"));",
							"});",
							"",
							"pm.environment.set(\"doneListId\", response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{trelloKey}}&token={{trelloToken}}&name=DONE&idBoard={{boardID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8f1da23d-937a-4c49-9b40-5cde3dbee5c6",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Card should be created\", function () {",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");",
							"    pm.expect(response.closed).to.eql(false);",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"todoListId\"));",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardID\"));",
							"});",
							"",
							"",
							"pm.test(\"Card should have no votes or attachments\", function () {",
							"    pm.expect(response.badges.votes).to.eql(0);",
							"    pm.expect(response.badges.attachmentsByType.trello.card).to.eql(0);",
							"});",
							"",
							"pm.environment.set(\"learnPostmanCardId\", response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{trelloKey}}&token={{trelloToken}}&idBoard={{boardID}}&idList={{todoListId}}&name=Learn Postman",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "keepFromSource",
							"value": "all",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Learn Postman"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card in DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3dd2fac6-fddd-4bd7-8f81-68bf7e4d33b1",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Card should have new list\", function () {\r",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"doneListId\"));\r",
							"});\r",
							"pm.test(\"Card should preserve properties\", function () {\r",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");\r",
							"    pm.expect(response.closed).to.eql(false);\r",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardID\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListId}}&idBoard={{boardID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListId}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{learnPostmanCardId}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete my board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f082025a-de72-4f0b-b0e6-f7ce9544c5ad",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.environment.unset(\"boardNumber\");",
							"pm.environment.unset(\"todoListId\");",
							"pm.environment.unset(\"doneListId\");",
							"pm.environment.unset(\"learnPostmanCardId\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b3dc9fe8-06d0-4336-ba5d-2f60dcbab816",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardID}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Board not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f082025a-de72-4f0b-b0e6-f7ce9544c5ad",
						"exec": [
							"pm.test(\"Status code is 404\", () => pm.response.to.have.status(404));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardID}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all created boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7992578c-8344-4499-aabf-89aec971e64e",
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
							"",
							"const response = pm.response.json();",
							"",
							"if(response.length !== 0){",
							"    pm.environment.set(\"boardID\", response[0].id);",
							"    postman.setNextRequest(\"Delete my board\");",
							"}",
							"else {",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/:id/boards?filter=open&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						":id",
						"boards"
					],
					"query": [
						{
							"key": "filter",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{username}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		}
	]
}